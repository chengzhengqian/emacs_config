;; provide autocomplete


(setq czq-julia-server-port "2000")
(setq czq-julia-server-ip "192.168.1.103")

(setq czq-julia-stream (open-network-stream "julia-connection" nil czq-julia-server-ip czq-julia-server-port))

;; Process julia-connection<1> connection broken by remote peer

;; Process julia-connection<2> connection broken by remote peer
;; (process-buffer czq-julia-stream)
;; (set-process-buffer czq-julia-stream nil)
;; (set-process-buffer czq-julia-stream (current-buffer))

(require `popup)


(defun keep-output (process output)
  (setq kept (cons output kept)))
(defun empty-output ()  (setq kept nil))
(defun get-output () (nth 0 kept))
;; (empty-output)

(set-process-filter czq-julia-stream 'keep-output)
;; (length kept)
;; (split-string (nth 2 kept))

;; (setq popup (popup-create (point) 10 10))
;; (popup-set-list popup '("Foo" "Bar" "Baz"))
;; (popup-draw popup)
;; (popup-delete popup)
;; (message (popup-selected-item popup))
;; (popup-next popup)

(defun czq-julia-autocomplete ()
  (interactive)
  (setq czq-julia-str (thing-at-point `word))
  (empty-output)
  (process-send-string czq-julia-stream (format "%s\n" czq-julia-str))
  (sleep-for 0.1)
  (setq czq-julia-cpmplete (popup-menu* (split-string (get-output))))
  (insert (substring czq-julia-cpmplete (length czq-julia-str)))
  )

(defun czq-julia-end-loop ()
  (interactive)
  (process-send-string czq-julia-stream "!!end\n"))

;; (czq-julia-autocomplete "d")


