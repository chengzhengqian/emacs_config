(require 'package)
(add-to-list 'package-archives
             '("melpa-stable" . "https://stable.melpa.org/packages/"))
(when (< emacs-major-version 24)
  ;; For important compatibility libraries like cl-lib
  (add-to-list 'package-archives '("gnu" . "http://elpa.gnu.org/packages/")))
(add-to-list 'package-archives
             '("elpy" . "http://jorgenschaefer.github.io/packages/"))
(add-to-list 'package-archives
              '("melpa" . "http://melpa.org/packages/") t)

(package-initialize) ;; You might already have this line
;; todo, clean the .emacs_xx to my-setting.el

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(column-number-mode t)
 '(custom-enabled-themes '(tango))
 '(display-time-mode t)
 '(geiser-chicken-binary "/home/chengzhengqian/cloud/chicken4.8/bin/csi")
 '(geiser-guile-binary "/home/chengzhengqian/cloud/guile2.2/bin/guile")
 '(imenu-auto-rescan t)
 '(package-selected-packages
   '(manage-minor-mode gnuplot-mode eglot-fsharp eglot-jl lsp-julia lsp-mode haskell-mode yasnippet cider pyim-cangjie5dict pyim geiser julia-mode ensime javadoc-lookup scala-mode js-comint origami fsharp-mode yapfify w3m tuareg slime realgud multi-web-mode magit js3-mode jedi intero haskell-emacs ggtags flycheck-irony etags-select elpy ein edit-server ecb cython-mode company-web company-irony company-ghc auto-complete-sage ac-js2 ac-haskell-process 2048-game))
 '(realgud-safe-mode nil)
 '(safe-local-variable-values
   '((haskell-process-use-ghci . t)
     (haskell-indent-spaces . 4)))
 '(scheme-program-name "csi -:c")
 '(show-paren-mode t)
 '(tool-bar-mode nil))



           
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :background "white" :foreground "black" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 199 :width normal :foundry "DAMA" :family "Ubuntu"))))
 '(ac-completion-face ((t (:foreground "olive drab" :underline t))))
 '(company-tooltip ((t (:background "dark gray" :foreground "black"))))
 '(company-tooltip-annotation-selection ((t (:inherit company-tooltip-annotation :background "black" :foreground "white"))))
 '(company-tooltip-common-selection ((t (:inherit company-tooltip-selection))))
 '(company-tooltip-selection ((t (:background "black" :foreground "white"))))
 '(cursor ((t (:background "black" :foreground "white"))))
 '(custom-invalid ((t (:background "lawn green" :foreground "black"))))
 '(ein:cell-input-area ((t (:background "dark goldenrod"))))
 '(error ((t (:foreground "blue" :weight bold))))
 '(etags-select-highlight-tag-face ((t (:background "black" :foreground "white" :weight bold))))
 '(font-lock-builtin-face ((t (:foreground "#000000"))))
 '(font-lock-comment-face ((t (:foreground "#444444" :slant italic))))
 '(font-lock-keyword-face ((t (:foreground "black" :weight bold))))
 '(font-lock-string-face ((t (:foreground "blue"))))
 '(font-lock-type-face ((t (:foreground "black"))))
 '(font-lock-variable-name-face ((t (:foreground "black" :weight light))))
 '(glyphless-char ((t nil)))
 '(highlight-indentation-face ((t (:inherit custom-invalid))))
 '(js2-external-variable ((t (:foreground "black"))))
 '(js3-external-variable-face ((t (:foreground "blue"))))
 '(manage-minor-mode-face-active ((t (:inherit success :foreground "black"))))
 '(manage-minor-mode-face-changed ((t (:inherit underline :foreground "blue"))))
 '(manage-minor-mode-face-inactive ((t (:inherit warning :foreground "dim gray"))))
 '(match ((t (:background "green"))))
 '(message-header-to ((t (:foreground "black" :weight bold))))
 '(mode-line ((t (:background "white" :foreground "black" :box (:line-width -1 :style released-button)))))
 '(mode-line-inactive ((t (:background "gray" :foreground "black" :box (:line-width -1 :style released-button)))))
 '(popup-face ((t (:background "dark gray" :foreground "black"))))
 '(popup-menu-selection-face ((t (:background "black" :foreground "white"))))
 '(popup-tip-face ((t (:background "chartreuse" :foreground "black"))))
 '(region ((t (:background "lime green" :foreground "black"))))
 '(show-paren-match ((t (:background "blue" :foreground "white"))))
 '(success ((t (:foreground "black"))))
 '(term-color-cyan ((t (:background "medium blue" :foreground "medium blue"))))
 '(term-color-green ((t (:background "dark green" :foreground "dark green"))))
 '(term-color-red ((t (:background "red4" :foreground "red4"))))
 '(tooltip ((t (:inherit variable-pitch :background "cyan" :foreground "black"))))
 '(variable-pitch ((t (:foreground "black" :weight normal :family "Sans Serif"))))
 '(w3m-tab-selected ((t (:background "black" :foreground "white"))))
 '(w3m-tab-unselected ((t (:background "white" :foreground "black"))))
 '(warning ((t (:foreground "black" :weight bold))))
 '(widget-field ((t (:background "magenta" :foreground "black")))))


(add-to-list 'load-path "~/.emacs.d/lisp/")
;; (require 'multi-term)
;; (require `insert-code-snippet)
(require `my-settings)

;; (require `edit-server)
;; (edit-server-start)

